// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"companies/internal/config"
	mongo2 "companies/internal/infra/db/mongo"
	"companies/internal/infra/http/auth"
	"companies/internal/infra/http/v1"
	"companies/internal/infra/http/v1/controller"
	"companies/internal/infra/http/v1/middleware"
	"companies/pkg/logger"
	"context"
	"go.mongodb.org/mongo-driver/mongo"
	"net/http"
)

// Injectors from wire.go:

func InitializeMongo(ctx context.Context, cfg *config.Config, logger2 *logger.Logger) *mongo.Client {
	mongoConfig := cfg.Mongo
	client := mongo2.NewClient(ctx, mongoConfig, logger2)
	return client
}

func InitializeRouter(cfg *config.Config, logger2 *logger.Logger, mongo3 *mongo.Client) http.Handler {
	companiesRepoMongo := mongo2.NewCompaniesRepo(mongo3)
	controllerController := controller.NewController(companiesRepoMongo)
	configAuth := cfg.Auth
	jwtValidator := auth.NewJwtValidator(configAuth)
	registry := middleware.NewRegistry(jwtValidator, logger2)
	handler := v1.NewRouter(controllerController, registry)
	return handler
}

// wire.go:

func InitializeLogger(cfg *config.Config) *logger.Logger {
	qloggerConfig := &cfg.Log
	qLogger := logger.New(qloggerConfig)
	return qLogger
}
