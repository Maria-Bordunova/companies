openapi: 3.0.3
info:
  title: companies
  description: the service provides endpoints for companies
  version: 1.0.0
servers:
  - url: 'http://localhost:7150'
paths:
    /companies:
      post:
        summary: Create a new company
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyInput'
        responses:
          '201':
            description: Company created successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Company'
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

    /companies/{uid}:
      patch:
        summary: Update a company partially
        parameters:
          - $ref: '#/components/parameters/paramCompanyUId'
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUpdate'
        responses:
          '200':
            description: Company updated successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Company'
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '404':
            description: Company not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

      delete:
        summary: Delete a company
        parameters:
          - $ref: '#/components/parameters/paramCompanyUId'
        responses:
          '204':
            description: Company deleted successfully
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '404':
            description: Company not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

      get:
        summary: Get details of a company
        parameters:
          - $ref: '#/components/parameters/paramCompanyUId'
        responses:
          '200':
            description: Company details retrieved successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Company'
          '404':
            description: Company not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

components:
  schemas:
    Company:
      type: object
      required:
        - id
        - name
        - employees
        - registered
        - type
      properties:
        id:
          type: string
        name:
          type: string
          maxLength: 15
        description:
          type: string
          maxLength: 3000
        employees:
          type: integer
          format: int64
          description: Amount of employees
        registered:
          type: boolean
        type:
          type: string
          enum: [ corporations, nonProfit, cooperative, soleProprietorship ]

    CompanyInput:
      allOf:
        - $ref: '#/components/schemas/Company'
      example:
        id: "550e8400-e29b-41d4-a716-446655440000"
        name: Example Corp
        employees: 100
        registered: true
        type: corporations

    CompanyUpdate:
      type: object
      properties:
        name:
          type: string
          maxLength: 15
        description:
          type: string
          maxLength: 3000
        employees:
          type: integer
          format: int64
        registered:
          type: boolean
        type:
          type: string
          enum: [ corporations, nonProfit, cooperative, soleProprietorship ]

    Error:
      type: object
      required: [ error, code ]
      properties:
        error:
          type: string
          description: Error message
        code:
          type: string
          description: Error code
          enum:
            - validation_error
            - company_not_found
            - unknown_storage_error

  parameters:
    paramCompanyUId:
      name: uid
      in: path
      required: true
      description: Company uid
      example: "550e8400-e29b-41d4-a716-446655440000"
      schema:
        type: string